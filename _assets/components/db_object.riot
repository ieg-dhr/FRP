<db-object>
  <template if={state.item}>
    <div class="container">
      <div class="breakout">
        <carousel
          carousel-id="object-carousel"
          urls={state.item.imageUrls('full')}
          ratio="1x1"
          ratio-md="21x9"
        />
      </div>

      <div class="position-relative">
        <div class="identifier mt-5 mt-md-0">
          <span class="text-muted">ID&nbsp;</span>{state.item.id()}<br />
          <a href={state.item.upstreamUrl()} target="_blank" rel="noopener">Wisski-Url</a>
          (<a href={state.item.upstreamEditUrl()} target="_blank" rel="noopener">edit</a>)
        </div>
      </div>

      <h3 class="mt-5">{state.item.title()}</h3>

      <field
        value={state.item.d['Datum']}
      />

      <field
        html={state.item.d['comment_html']}
      />

      <field
        label="Objektart"
        value={state.item.d['Objektart']}
      />

      <field
        label="Gattung"
        value={state.item.d['Gattung']}
      />

      <field
        label="VD17-Nummer"
        value={state.item.d['VD17-Nr.']}
      />

      <field
        label="Verwalter"
        values={state.item.verwalter()}
      />

      <field
        label="Inventarnummer/Signatur"
        value={state.item.d['Inventarnummer/Signatur']}
      />

      <template if={state.item.verwalterAlt().length}>
        <hr class="my-5" />

        <div class="text-muted fw-bold mb-4">Weiteres Exemplar</div>

        <field
          label="Verwalter"
          values={state.item.verwalterAlt()}
        />

        <field
          label="Inventarnummer"
          value={state.item.d['Inventarnummer dupl']}
        />
      </template>

      <hr class="my-5" />

      <field
        each={e in Object.entries(state.item.herstellung())}
        label={e[0]}
        values={e[1]}
      />

      <field
        label="Herstellungsort"
        value={state.item.d['Herstellungsort']}
      />

      <template if={state.item.technique().length || state.item.d['Beschreibstoff']}>
        <hr class="my-5" />

        <field
          label="Technik"
          values={state.item.technique()}
        />

        <field
          label="Beschreibstoff"
          value={state.item.d['Beschreibstoff']}
        />
      </template>

      <template if={state.item.d['Messtyp'] || state.item.d['Messwert (H x B x T)'] || state.item.d['Maßeinheit']}>
        <hr class="my-5" />

        <field
          label="Messtyp"
          value={state.item.d['Messtyp']}
        />

        <field
          label="Messwert (H x B x T)"
          value={state.item.d['Messwert (H x B x T)']}
        />

        <field
          label="Maßeinheit"
          value={state.item.d['Maßeinheit']}
        />
      </template>

      <template if={state.item.d['Sammlerstempel'] || state.item.d['Sammlerstempel (Nachweis)'] || state.item.d['Sammlerstempel (Nachweis: Seite/Nummer)']}>
        <hr class="my-5" />

        <field
          label="Sammlerstempel"
          value={state.item.d['Sammlerstempel']}
        />

        <field
          label="Sammlerstempel (Nachweis)"
          value={state.item.d['Sammlerstempel (Nachweis)']}
        />

        <field
          label="Sammlerstempel (Nachweis: Seite/Nummer)"
          value={state.item.d['Sammlerstempel (Nachweis: Seite/Nummer)']}
        />

        <field
          label="Anbringungsort"
          value={state.item.d['Anbringungsort']}
        />
      </template>

      <field
        label="Signatur"
        values={state.item.signatur()}
      />

      <field
        label="Kurztitel"
        values={state.item.kurztitel()}
      />

      <field
        label="Seitenzahl"
        values={state.item.seitenzahl()}
      />

      <hr class="my-5" />

      <field
        label="Bearbeiter"
        value={state.item.d['Bearbeiter']}
      />
    </div>
  </template>

  <script>
    import {Url, util} from '@wendig/lib'
    import Search from '../lib/search'

    import carousel from './carousel.riot'
    import field from './field.riot'
    import raw from './raw.riot'

    export default class {
      static components = {
        carousel,
        field
      }

      onBeforeMount() {
        const u = Url.current()

        this.search = new Search()
        this.search.query({id: u.params().id}).then(data => {
          this.update({item: data.results[0]})
        })
      }
    }
  </script>
</db-object>

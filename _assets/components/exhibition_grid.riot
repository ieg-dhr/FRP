<exhibition-grid>
  <h1 class="mt-7 mb-5">{this.state.category}</h1>

  <div class="d-flex flex-column align-items-center mb-6">
    <img src="/assets/images/categories/{coverImage()}.jpg" class="mw-100" />
  </div>

  <hr class="d-none d-lg-block mt-5 mb-5"/>

  <div class="text-center mb-5 mb-lg-0">
    <a
      class="d-block d-lg-inline-block btn btn-primary"
      data-bs-toggle="collapse"
      href="#category-selector"
    >
      zu den anderen Galerien&nbsp;
      <svg class="feather">
        <use href="/assets/feather.svg#compass" />
      </svg>
    </a>
  
    <div class="collapse mt-lg-4" id="category-selector">
      <div class="card card-body">
        <a
          each={c in this.categories()}
          class="fs-4 fs-md-3 fs-lg-2 btn mb-2 mb-md-3 me-2 {active(c)}"
          href="/exhibition?category={c}"
        >{c}</a>
      </div>
    </div>
  </div>

  <hr class="d-none d-lg-block mt-5 mb-6"/>

  <exhibition-description class="d-block mb-7" category={this.state.category} />

  <div class="text-center mb-7"><strong>{this.state.total} Objekte</strong></div>

  <div class="breakout overflow-x-hidden">
    <div class="row g-0 grid">
      <div
        class="tile col-12 col-sm-6 col-lg-4 col-xl-3 d-flex flex-column justify-content-start align-items-center"
        each={item in this.state.items}
      >
        <div class="frame">
          <img src={item.imageUrl()} />
          <div
            if={!item.hasImage()}
            class="dummy-text text-white fs-3 fs-sm-6"
          >keine<br />Abbildung<br />verfügbar</div>
        </div>
        <div class="caption">
          {shorten(item.title(), 100)}
        </div>
        <a href="{item.upstreamUrl()}" class="stretched-link"></a>
      </div>
    </div>
  </div>

  <script>
    import {Url, util} from '@wendig/lib'
    import {Search} from '../lib/search'
    import ExhibitionDescription from './exhibition_description.riot'

    export default class {
      static components = {
        'exhibition-description': ExhibitionDescription
      }

      constructor() {
        this.shorten = util.shorten.bind(this)
      }

      onBeforeMount() {
        this.search = new Search()
        this.search.addListener((items, total) => {
          this.update({
            items: items,
            total: items.length
          })
        })

        const u = Url.current()
        const category = decodeURIComponent(u.params().category)
        this.state = {category: category}
        this.search.query({category: category})
      }

      onUpdated() {
        const elements = this.root.querySelectorAll('.category-links > *') 
        for (const e of elements) {
          e.append(' ')
        }
      }

      categories() {
        return [
          'Diplomatie',
          'Herrscherrepräsentation',
          'Frieden durch göttliches Handeln',
          'Jubiläum',
          'Friedenszeit',
          'Ordnungsvorstellungen',
          'Friedensbotschaft',
          'Natur'
        ]
      }

      coverImage() {
        return {
          'Diplomatie': 'diplomatie',
          'Herrscherrepräsentation': 'herrscher_repraesentationen',
          'Frieden durch göttliches Handeln': 'goettliches_handeln',
          'Jubiläum': 'jubilaeum',
          'Friedenszeit': 'friedenszeit',
          'Ordnungsvorstellungen': 'ordnungsvorstellungen',
          'Friedensbotschaft': 'friedensbotschaft',
          'Natur': 'natur'
        }[this.state.category]
      }

      active(category) {
        return this.state.category == category ? 'disabled' : ''
      }
    }
  </script>
</exhibition-grid>
